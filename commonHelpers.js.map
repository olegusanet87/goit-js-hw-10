{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["'use strict';\nconsole.log(\"Timer\");\n\nimport flatpickr from \"flatpickr\";\n\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nimport iziToast from \"izitoast\";\nimport Error from '../img/bi_x-octagon.svg';\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n//require(\"/flatpickr/dist/themes/dark.css\");\nconst inputDate = document.querySelector('#datetime-picker');\ninputDate.classList.add('dataset');\nconst btnStart = document.querySelector('[data-start]');\nbtnStart.classList.add('startbutton');\n\nbtnStart.addEventListener('mouseover', function () {\n\tbtnStart.classList.add('hover');\n});\n\nbtnStart.addEventListener('mouseout', function () {\n\tbtnStart.classList.remove('hover');\n});\ninputDate.addEventListener('mouseover', function () {\n\tinputDate.classList.add('hover');\n});\n\ninputDate.addEventListener('mouseout', function () {\n\tinputDate.classList.remove('hover');\n});\nlet intervalId = null;\nlet userSelectedDate = null;\n\nconst options = {\n\tenableTime: true,\n\ttime_24hr: true,\n\tdefaultDate: new Date(),\n\tminuteIncrement: 1,\n\tonClose(selectedDates) {\n\t\tconsole.log(selectedDates[0]);\n\t\tuserSelectedDate = selectedDates[0];\n\n\t},\n};\n\nflatpickr(\"#datetime-picker\", options);\n\n\nfunction convertMs(ms) {\n\t// Number of milliseconds per unit of time\n\tconst second = 1000;\n\tconst minute = second * 60;\n\tconst hour = minute * 60;\n\tconst day = hour * 24;\n\n\t// Remaining days\n\tconst days = Math.floor(ms / day);\n\t// Remaining hours\n\tconst hours = Math.floor((ms % day) / hour);\n\t// Remaining minutes\n\tconst minutes = Math.floor(((ms % day) % hour) / minute);\n\t// Remaining seconds\n\tconst seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n\treturn { days, hours, minutes, seconds };\n}\n\n\nfunction selectedDates() {\n\tif (!userSelectedDate || userSelectedDate.getTime() <= new Date().getTime()) {\n\t\tiziToast.error({\n\t\t\tclass: 'popup-message',\n\t\t\ttheme: 'dark',\n\t\t\tbackgroundColor: '#ef4040',\n\t\t\tmessageColor: '#fff',\n\t\t\tposition: 'topRight',\n\t\t\tpauseOnHover: true,\n\t\t\ttimeout: 3000,\n\t\t\ticonUrl: Error,\n\t\t\ttitle: 'Error',\n\t\t\tmessage: 'Please choose a date in the future',\n\t\t});\n\t\tdocument.querySelector('[data-start]').disabled = true;\n\t} else {\n\t\tdocument.querySelector('[data-start]').disabled = false;\n\t\tinputDate.classList.add('active');\n\n\n\t}\n}\n\ndocument.querySelector('[data-start]').addEventListener(\"click\", () => {\n\tclearInterval(intervalId);\n\tselectedDates();\n\n\tconst selectedDate = userSelectedDate;\n\n\tconst currentDate = new Date();\n\n\tlet differenceMs = selectedDate.getTime() - currentDate.getTime();\n\n\tif (differenceMs > 0) {\n\t\tbtnStart.classList.add('disable');\n\t\tinputDate.classList.add('disable');\n\n\t\tintervalId = setInterval(() => {\n\n\t\t\tlet { days, hours, minutes, seconds } = convertMs(differenceMs);\n\t\t\tdocument.querySelector('[data-days]').textContent = addLeadingZero(days);\n\t\t\tdocument.querySelector('[data-hours]').textContent = addLeadingZero(hours);\n\t\t\tdocument.querySelector('[data-minutes]').textContent = addLeadingZero(minutes);\n\t\t\tdocument.querySelector('[data-seconds]').textContent = addLeadingZero(seconds);\n\t\t\tdifferenceMs -= 1000;\n\n\t\t\tif (differenceMs <= 0) {\n\n\t\t\t\tclearInterval(intervalId);\n\t\t\t\tdocument.querySelector('[data-start]').disabled = false;\n\t\t\t\tdocument.querySelector('#datetime-picker').disabled = false;\n\t\t\t\tbtnStart.classList.remove('disable');\n\t\t\t}\n\n\n\n\t\t}, 1000);\n\n\n\t\tdocument.querySelector('[data-start]').disabled = true;\n\t\tdocument.querySelector('#datetime-picker').disabled = true;\n\t}\n});\n\nfunction addLeadingZero(value) {\n\tif (value < 10) {\n\t\treturn value.toString().padStart(2, '0');\n\t} else {\n\t\treturn value.toString();\n\t}\n\n};\n"],"names":["inputDate","btnStart","intervalId","userSelectedDate","options","selectedDates","flatpickr","convertMs","ms","days","hours","minutes","seconds","iziToast","Error","selectedDate","currentDate","differenceMs","addLeadingZero","value"],"mappings":"iJACA,QAAQ,IAAI,OAAO,EAWnB,MAAMA,EAAY,SAAS,cAAc,kBAAkB,EAC3DA,EAAU,UAAU,IAAI,SAAS,EACjC,MAAMC,EAAW,SAAS,cAAc,cAAc,EACtDA,EAAS,UAAU,IAAI,aAAa,EAEpCA,EAAS,iBAAiB,YAAa,UAAY,CAClDA,EAAS,UAAU,IAAI,OAAO,CAC/B,CAAC,EAEDA,EAAS,iBAAiB,WAAY,UAAY,CACjDA,EAAS,UAAU,OAAO,OAAO,CAClC,CAAC,EACDD,EAAU,iBAAiB,YAAa,UAAY,CACnDA,EAAU,UAAU,IAAI,OAAO,CAChC,CAAC,EAEDA,EAAU,iBAAiB,WAAY,UAAY,CAClDA,EAAU,UAAU,OAAO,OAAO,CACnC,CAAC,EACD,IAAIE,EAAa,KACbC,EAAmB,KAEvB,MAAMC,EAAU,CACf,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACtB,QAAQ,IAAIA,EAAc,CAAC,CAAC,EAC5BF,EAAmBE,EAAc,CAAC,CAElC,CACF,EAEAC,EAAU,mBAAoBF,CAAO,EAGrC,SAASG,EAAUC,EAAI,CAQtB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACvC,CAGA,SAASP,GAAgB,CACpB,CAACF,GAAoBA,EAAiB,QAAS,GAAI,IAAI,KAAI,EAAG,WACjEU,EAAS,MAAM,CACd,MAAO,gBACP,MAAO,OACP,gBAAiB,UACjB,aAAc,OACd,SAAU,WACV,aAAc,GACd,QAAS,IACT,QAASC,EACT,MAAO,QACP,QAAS,oCACZ,CAAG,EACD,SAAS,cAAc,cAAc,EAAE,SAAW,KAElD,SAAS,cAAc,cAAc,EAAE,SAAW,GAClDd,EAAU,UAAU,IAAI,QAAQ,EAIlC,CAEA,SAAS,cAAc,cAAc,EAAE,iBAAiB,QAAS,IAAM,CACtE,cAAcE,CAAU,EACxBG,IAEA,MAAMU,EAAeZ,EAEfa,EAAc,IAAI,KAExB,IAAIC,EAAeF,EAAa,QAAS,EAAGC,EAAY,QAAO,EAE3DC,EAAe,IAClBhB,EAAS,UAAU,IAAI,SAAS,EAChCD,EAAU,UAAU,IAAI,SAAS,EAEjCE,EAAa,YAAY,IAAM,CAE9B,GAAI,CAAE,KAAAO,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUU,CAAY,EAC9D,SAAS,cAAc,aAAa,EAAE,YAAcC,EAAeT,CAAI,EACvE,SAAS,cAAc,cAAc,EAAE,YAAcS,EAAeR,CAAK,EACzE,SAAS,cAAc,gBAAgB,EAAE,YAAcQ,EAAeP,CAAO,EAC7E,SAAS,cAAc,gBAAgB,EAAE,YAAcO,EAAeN,CAAO,EAC7EK,GAAgB,IAEZA,GAAgB,IAEnB,cAAcf,CAAU,EACxB,SAAS,cAAc,cAAc,EAAE,SAAW,GAClD,SAAS,cAAc,kBAAkB,EAAE,SAAW,GACtDD,EAAS,UAAU,OAAO,SAAS,EAKpC,EAAE,GAAI,EAGP,SAAS,cAAc,cAAc,EAAE,SAAW,GAClD,SAAS,cAAc,kBAAkB,EAAE,SAAW,GAExD,CAAC,EAED,SAASiB,EAAeC,EAAO,CAC9B,OAAIA,EAAQ,GACJA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,EAEhCA,EAAM,UAGf"}